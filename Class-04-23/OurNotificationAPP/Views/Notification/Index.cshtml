@model OurNotificationAPP.Models.NotificationViewModel

@{
    ViewData["Title"] = "Send Notification";
}

<div class="container mt-4">
    <h1>Send Notification</h1>

    @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
    {
        <div class="alert alert-success">
            @ViewBag.SuccessMessage
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    Notification Form
                </div>
                <div class="card-body">
                    <form asp-action="Send" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-3">
                            <label asp-for="Message" class="form-label">Message</label>
                            <textarea asp-for="Message" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Message" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NotificationType" class="form-label">Notification Type</label>
                            <select asp-for="NotificationType" class="form-select" asp-items="Html.GetEnumSelectList<OurNotificationAPP.Models.NotificationPreference>()">
                                <option value="">-- Select Notification Type --</option>
                            </select>
                            <span asp-validation-for="NotificationType" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <button type="submit" class="btn btn-primary">Send Notification</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    Quick Test Links
                </div>
                <div class="card-body">
                    <h5>Direct Send</h5>
                    <ul>
                        <li><a href="javascript:void(0);" onclick="sendDirectNotification('This is a test email message', 'email')">Send Test Email</a></li>
                        <li><a href="javascript:void(0);" onclick="sendDirectNotification('This is a test SMS message', 'sms')">Send Test SMS</a></li>
                    </ul>

                    <h5>User Preference Based</h5>
                    <ul>
                        <li><a href="javascript:void(0);" onclick="notifyUser(1, 'Important message for User 1')">Notify User 1 (Prefers SMS)</a></li>
                        <li><a href="javascript:void(0);" onclick="notifyUser(2, 'Important message for User 2')">Notify User 2 (Prefers Email)</a></li>
                    </ul>

                    <div id="resultArea" class="alert alert-info mt-3" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function sendDirectNotification(message, type) {
            fetch(`/Notification/SendDirect?message=${encodeURIComponent(message)}&type=${type}`)
                .then(response => response.text())
                .then(data => {
                    showResult(data);
                })
                .catch(error => {
                    showResult('Error: ' + error);
                });
        }

        function notifyUser(userId, message) {
            fetch(`/Notification/NotifyUser?userId=${userId}&message=${encodeURIComponent(message)}`)
                .then(response => response.text())
                .then(data => {
                    showResult(data);
                })
                .catch(error => {
                    showResult('Error: ' + error);
                });
        }

        function showResult(message) {
            const resultArea = document.getElementById('resultArea');
            resultArea.innerText = message;
            resultArea.style.display = 'block';

            // Auto-hide after 5 seconds
            setTimeout(() => {
                resultArea.style.display = 'none';
            }, 5000);
        }
    </script>
}